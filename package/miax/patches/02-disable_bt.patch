diff -ur miax-1.4-old/Makefile miax-1.4/Makefile
--- miax-1.4-old/Makefile	2010-11-25 16:25:02.000000000 +0200
+++ miax-1.4/Makefile	2010-11-25 16:36:13.000000000 +0200
@@ -1,6 +1,6 @@
 OFLAGS= -02 -g
 CFLAGS= -Iiax/ -Igsm/inc $(CPPFLAGS) -DIAXC_IAX2 -DLIBIAX -DPOSIXSLEEP -DLINUX $(OFLAGS)
-SYSLIBS=-lpthread -lm -lbluetooth
+SYSLIBS=-lpthread -lm
 
 
 OBJS=\
@@ -28,14 +28,13 @@
 	iax/iaxclient_lib.o \
 	dtmf.o \
 	oss.o \
-	bluetooth.o \
 	modem.o \
 	miax.o
 
 all: $(OBJS)
 	$(CC) $(OBJS) $(CFLAGS) $(LDFLAGS) $(SYSLIBS) -o miax
 
-static: $(OBJS) bluetooth.o 
+static: $(OBJS)
 	$(CC) $(OBJS) $(CFLAGS) $(LDFLAGS) $(SYSLIBS) -static -o miax
 
 clean: 
diff -ur miax-1.4-old/miax.h miax-1.4/miax.h
--- miax-1.4-old/miax.h	2005-04-06 11:50:43.000000000 +0300
+++ miax-1.4/miax.h	2010-11-25 16:33:47.000000000 +0200
@@ -28,46 +28,46 @@
 char	number[1024];
 
 int audio_init(char *dev, int compression) { 
-	(bt) ?  bt_audio_init(dev, compression) : oss_audio_init(dev, compression); 
+	(bt) ?  oss_audio_init(dev, compression) : oss_audio_init(dev, compression); 
 	}
 
 int audio_open() { 
-	(bt) ?  bt_audio_open() : oss_audio_open(); 
+	(bt) ?  oss_audio_open() : oss_audio_open(); 
 	}
 
 int audio_out(struct iaxc_call *call, void *encoded) { 
-	(bt) ?  bt_audio_out(call,encoded) : oss_audio_out(call,encoded) ; 
+	(bt) ?  oss_audio_out(call,encoded) : oss_audio_out(call,encoded) ; 
 	}
 
 int audio_in(struct iaxc_call *call) { 
-	(bt) ?  bt_audio_in(call) : oss_audio_in(call) ; 
+	(bt) ?  oss_audio_in(call) : oss_audio_in(call) ; 
 	}
 
 int audio_close () { 
-	(bt) ?  bt_audio_close() : oss_audio_close() ; 
+	(bt) ?  oss_audio_close() : oss_audio_close() ; 
 	}
 
 int modem_init(char *dev) { 
-	(bt) ?  bt_modem_init(dev) : tty_modem_init(dev) ; 
+	(bt) ?  tty_modem_init(dev) : tty_modem_init(dev) ; 
 	}
 
 int modem(char *val) { 
 	char tmp[1024];
 	
-	(bt) ?  bt_modem(val, tmp) : tty_modem(val, tmp) ; 
+	(bt) ?  tty_modem(val, tmp) : tty_modem(val, tmp) ; 
 	}
 
 int modem_close() { 
-	(bt) ?  bt_modem_close() : tty_modem_close() ; 
+	(bt) ?  tty_modem_close() : tty_modem_close() ; 
 	}
 
 int modem_loop(int status, char *number) { 
-	if (bt) { return bt_modem_loop(status, number); } 
+	if (bt) { return tty_modem_loop(status, number); } 
 	else { return tty_modem_loop(status, number); } 
 	}
 
 int miax_loop(int status, char *number) {
-	if (m > 0 && bt > 0) { return bt_modem_loop(status, number); }
+	if (m > 0 && bt > 0) { return tty_modem_loop(status, number); }
 	if (m > 0 && bt == 0) { return tty_modem_loop(status, number); }
 	if (m == 0) { 
 		printf("\nMiax console.\t[h] to hangup or quit\n");
