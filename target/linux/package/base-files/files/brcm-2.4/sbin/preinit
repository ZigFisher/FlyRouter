#!/bin/sh
#
# FlyRouter Team (c) 2004-2010 | http://www.flyrouter.net
# Pre-init script
# Version 0.3 20071126

test -f /bin/router_functions && . /bin/router_functions 
test -f /etc/skyrouter.conf && . /etc/skyrouter.conf

VERBOSE=3
JFFS2_PARTITION="$DATAFS_PARTITION"
JFFS2_PARTITION_SIZE="$DATAFS_PARTITION_SIZE"
JFFS2_HEADER="8519"
GZIP_HEADER="1f8b"
BZIP2_HEADER="UNKNOWN"


SKYROUTER_TYPE="tmpfs"

[ "$DATAFS_PARTITION" ] || die "DATAFS_PARTITION is not defined"
[ "$INITFS_PARTITION" ] || die "INITFS_PARTITION is not defined"
[ "$KERNEL_PARTITION" ] || die "KERNEL_PARTITION is not defined"
[ "$DATAFS_PARTITION_SIZE" ] || die "DATAFS_PARTITION_SIZE is not defined"
[ "$INITFS_PARTITION_SIZE" ] || die "INITFS_PARTITION_SIZE is not defined"

required grep
required tr
required tar
required head
required hexdump
required cut
required dd
required find

mount_tmpfs() {
	msgn "Mounting tmpfs to /ram"
	if mount 2>/dev/null | grep ram >/dev/null; then
		warn "/ram already mounted"
	else
		mount -t tmpfs tmpfs /ram -o size=50% && ok || warn "mount fail"
	fi
	mkdir -p /ram/var/log /ram/var/spool /ram/var/run /ram/var/lib/ipkg /ram/var/lock 
	mkdir -p /ram/home /ram/usr/local
	mkdir -p /ram/root
	mkdir -p /ram/tmp
}

unpack_skeleton(){
	dst="$1"
	msgn "Copying /etc to $dst..."
	test -d "$dst" || die "Destination $dst not found"
	cp -a /etc $dst && ok || die
}

make_links2rom(){
	dst=$1
	msgn "Making symlinks... "
	cd $dst || die "Cannot enter to $dst" 
	local dirs4link="lib bin sbin usr www"
	for file in $(cd /; { find $dirs4link -type f; find $dirs4link -type l; };); do 
		local dir=$(dirname $file)
		mkdir -p $dir
		ln -sf /rom/$file $file || fail "/rom/$file -> $file"
	done
	ok
	cd /
}

clear_partition(){
	part=$1
	msgn "Clearing partition $part ..."
	/sbin/flash erase && ok || fail
}

make_devdir(){
	msgn "Mounting /dev..."
	dest=$1
	if mount 2>/dev/null | grep devfs >/dev/null; then
		umount /dev 
		mkdir -p $dest/dev
		mount -t devfs devfs $dest/dev && ok || fail
	else
		{ tar cf - /dev 2>/dev/null | tar xf - -C $dest >/dev/null >&1; } && ok || fail
	fi
}

create_jffs2_partition(){
	clear_partition $JFFS2_PARTITION
	mount -t jffs2 $JFFS2_PARTITION /jffs
	unpack_skeleton /jffs
	make_links2rom /jffs
	make_devdir /jffs
	cp /etc/skyrouter.conf /jffs/etc
	rm -rf /jffs/tmp
	ln -s /ram/tmp /jffs/tmp
	okfail "Syncing..." sync 
	cd /
	umount /jffs
}

create_tmpfs_partition(){
	local broken=0
	mkdir -p /ram/tmp
	chmod +t /ram/tmp
	export TMPDIR=/ram/tmp

	msgn "Extracting datafs..."
	if flash load /ram 2>/dev/null; then
		ok
		if [ -f /ram/etc/skyrouter.conf ]; then 
			. /ram/etc/skyrouter.conf
		else
			broken=1
		fi
	else
		broken=1
	fi
	if [ $broken = 1 ]; then
		warn "Broken datafs partition or first run: resetting to defaults"
		flash erase
		unpack_skeleton /ram 
		cp /etc/skyrouter.conf /ram/etc
	fi
	unset TMPDIR

	make_links2rom /ram
	make_devdir /ram
	mkdir -p /ram/proc
	#rm -rf /ram/tmp
}

gen_mac_address(){
	if [ -z "$MAC_ADDRESS_BASE" ]; then
		msg "Generating random mac address..."
		mac1="`cat /dev/urandom | hexdump  | head -1 | cut -c9,10`"
		mac2="`cat /dev/urandom | hexdump  | head -1 | cut -c9,10`"
		mac3="`cat /dev/urandom | hexdump  | head -1 | cut -c9,10`"
		echo "MAC_ADDRESS_BASE='A0:43:$mac1:$mac2:$mac3:0'" >>/etc/skyrouter.conf
	fi
}

update_skyrouter_conf(){
	. /etc/skyrouter.conf
	#gen_mac_address
	if [ -z "$FIRST_BOOT" ]; then
		DATE="`date +%Y%m%d`"
		if [ `date +%Y%m%d` -gt 20080101 ]; then
			msgn "Updating first boot date..."
			echo "FIRST_BOOT=$DATE" >>/etc/skyrouter.conf && ok || fail
		fi
	fi
}

ipkg_hack(){
	# this is a hack
	rm -rf /usr/lib/ipkg/info/
	cp -a /rom/usr/lib/ipkg/info /usr/lib/ipkg
}

main(){
	#/sbin/gpio init $STATUS_LED out >/dev/null
	#/sbin/gpio blink $STATUS_LED 50 >/dev/null
	msg "Starting skyrouter revision $SKYROUTER_REVISION ver $SKYROUTER_VERSION_MAJOR.$SKYROUTER_VERSION_MINOR SKYROUTER_TYPE is a $SKYROUTER_TYPE"
	if [ "$SKYROUTER_TYPE" = "jffs2" ]; then
		if [ -r /proc/jffs2_bbc ]; then
			info 3 "Setting jffs2_bbc parameters..."
			echo S >/proc/jffs2_bbc
			echo 1:lzari >/proc/jffs2_bbc
			#echo 0:zlib >/proc/jffs2_bbc
		fi

		#is_first_boot && create_jffs2_partition
		[ -d /jffs/bin ] || mount -t jffs2 $JFFS2_PARTITION /jffs 
		if [ -d /jffs/bin ]; then
			umount /proc
			pivot_root /jffs /jffs/rom
		else
			die "/jffs not mounted"
		fi
		mount -t proc /proc /proc
		mount_tmpfs
        mkdir -p /ram/tmp

	elif [ "$SKYROUTER_TYPE" = "tmpfs" ]; then
		mount_tmpfs
		create_tmpfs_partition
		mkdir -p /ram/rom
		msgn "Replacing / ..."
		pivot_root /ram /ram/rom && ok || fail
		msgn "Remount /proc ..."
		mkdir -p /proc;
		mount -t proc /proc /proc && ok || fail 
		mount -t devfs none /dev; 
	elif [ "$SKYROUTER_TYPE" = "usb" ]; then
        die "SKYROUTER_TYPE $SKYROUTER_TYPE is not implemented"
	else 
		die "Unknown SKYROUTER_TYPE: '$SKYROUTER_TYPE'"
	fi

	update_skyrouter_conf
	ipkg_hack
}

main $@
exec /sbin/init
